#animations-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto auto;
  grid-template-areas:
    "animations-one animations-two animations-three"
    "animations-four animations-five animations-six";
  margin: 2rem;
  gap: 2rem;
}

#animations-one {
  grid-area: animations-one;
}

#animations-two {
  grid-area: animations-two;
}

#animations-three {
  grid-area: animations-three;
}

#animations-four {
  grid-area: animations-four;
}

#animations-five {
  grid-area: animations-five;
}

#animations-six {
  grid-area: animations-six;
}

#animations-one,
#animations-two,
#animations-three,
#animations-four,
#animations-five,
#animations-six {
  background-color: #f1f8f1;
  border: 1px solid #cdded1;
  padding: 4rem;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 300px;
}

/* - - - Animation One - - - */

#animations-one {
  flex-direction: column;
  gap: 2rem;
}

:root {
  --neon-sign-color: rgb(227, 78, 183);
}

/* Flicker animation */
@keyframes flicker {

  /* at these percentages of the animation duration, content is fully visible 
  text shadow simulates the glowing effect */
  0%,
  19%,
  21%,
  23%,
  25%,
  54%,
  56%,
  100% {
    opacity: 1;
    text-shadow:
      0 0 5px var(--neon-sign-color),
      0 0 10px var(--neon-sign-color),
      0 0 20px var(--neon-sign-color),
      0 0 40px var(--neon-sign-color),
      0 0 80px var(--neon-sign-color);
  }

  /* at these percentages, dimmed text, and no text shadow (to mimic no flicker) */
  20%,
  24%,
  55% {
    opacity: 0.4;
    text-shadow: none;
  }
}

/* Default neon styling (no flicker) */
.neon-text {
  margin: 1rem;
  font-family: 'Arial', sans-serif;
  font-size: 2rem;
  /* bit of extra space between the letters */
  letter-spacing: 5px;
  color: var(--neon-sign-color);
  /* text shadow of varying sizes, all with the same colour */
  text-shadow:
    0 0 5px var(--neon-sign-color),
    0 0 10px var(--neon-sign-color),
    0 0 20px var(--neon-sign-color),
    0 0 40px var(--neon-sign-color),
    0 0 80px var(--neon-sign-color);
}

/* Flicker in effect only when checkbox is checked */
/* When the flicker-toggle id checkbox is checked, apply flicker animation to element with neon-sign id */
/* ~ is the general sibling combinator: 
- select any sibling element that comes after the checked element, and matches the next selector.
- sibling elements are elements that share the same parent element */
#neon-sign-flicker-toggle:checked~#neon-sign {
  /* play animation infinitely with 3 seconds duration */
  animation: flicker 3s infinite;
}

/* styling for the 'enable sign flicker' button */
#neon-sign-flicker-label {
  display: inline-block;
  padding: .5rem;
  background-color: #222;
  color: white;
  border: 2px solid var(--neon-sign-color);
  cursor: pointer;
  border-radius: 5px;
  font-weight: bold;
  /* text inside the element cannot be selected or highlighted by user */
  user-select: none;
}

/* when the flicker-label checkbox is checked, change the background and text colour of enable flicker button */
#flicker-toggle:checked+#flicker-label {
  background-color: var(--neon-sign-color);
  color: black;
}

/* - - - Animation Two - - - */

/* styling for the 'click to reveal' button */
.hidden-content-click-to-show {
  cursor: pointer;
  background-color: #e3eaf4;
  color: #5c7ea3;
  display: inline-block;
  padding: 1rem;
  border-radius: 10px;
  border: 1px solid #a3c0dd;
  box-shadow: 0 0 5px #c3d9ef;
  transition: all 0.3s ease;
  text-align: center;
}

/* slight hover effect on click to show button */
.hidden-content-click-to-show:hover {
  background-color: #d2deec;
  box-shadow: 0 0 8px #b0c8e5;
}

/* Transitionable hidden state */
.hidden-content {
  /* height, overflow and opacity initially set to make it invisible */
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  /* - - - */

  /* styling for hidden content */
  color: rgb(60, 56, 56);
  background: #b0c3de;
  padding: 0 1rem;
  border: 1px solid #90b4d4;
  box-shadow: 0 0 8px #90b4d4;
  border-radius: 8px;
  margin: 0 2rem;
  text-align: center;
}

.hidden-content {
  /* transition to visible will take one second */
  /* this makes the transition from 0 opacity to 1 opacity take a second */
  /* the transition to max height alos takes a second */
  transition:
    opacity 1s ease,
    max-height 1s ease,
    padding 1s ease;
}

/* Smooth reveal when checkbox is checked */
#hidden-content-toggle-content:checked+.hidden-content-click-to-show+.hidden-content {
  max-height: 500px;
  opacity: 1;
  padding: 1rem;
}

/* - - - Animation Three - - - */

/* Pulse animation keyframes */
/* vary the opacity and scaling at different time intervals */
@keyframes slowPulse {

  0%,
  100% {
    transform: scale(1);
    opacity: 1;
  }

  50% {
    transform: scale(1.05);
    opacity: 0.85;
  }
}

/* static pulse text */
.pulse-text {
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  color: #9147ff;
  padding: 2rem;
  /* apply transition to all animatable properties over 0.3 secs with ease */
  transition: all 0.3s ease;
}

/* apply pulse animation when checkbox is checked */
/* target the .pulse-label and .pulse-text when pulse-toggle is checked */
#pulse-toggle:checked+.pulse-label+.pulse-text {
  /* applies our previously defined slowpulse animation
  duration of three seconds
  plays forever */
  animation: slowPulse 3s ease-in-out infinite;
}

/* toggle button styling */
.pulse-label {
  cursor: pointer;
  display: inline-block;
  padding: 1rem;
  background-color: #f5ecf9;
  color: #8c56dc;
  border-radius: 6px;
  border: 1px solid #ccc;
  text-align: center;
  user-select: none;
  font-weight: 600;
}

/* - - - Animation Four - - - */

/* styling for the toggle text slide in button */
.slide-label {
  cursor: pointer;
  display: inline-block;
  padding: 1rem;
  background-color: #eee;
  color: #333;
  border-radius: 6px;
  border: 1px solid #ccc;
  user-select: none;
  font-weight: 600;
  box-shadow: 0 0 8px #90b4d4;
}

/* Base state: text off-screen to the left, hidden */
.slide-text {
  /* moved horizonally by -100% */
  transform: translateX(-100%);
  opacity: 0;
  /* both the horizonal movement and the opacity change take 1 second */
  transition: transform 1s ease, opacity 1s ease;
  /* pointer-events: none, so label isn't blocked by .slide-text overlaying the toggle button */
  pointer-events: none;
  padding: 1rem;
  background-color: #eee;
  color: #333;
  border-radius: 6px;
  border: 1px solid #ccc;
  margin: 2rem;
  box-shadow: 0 0 4px #90b4d4;
}

/* When checkbox is checked, slide text in */
#slide-toggle:checked+.slide-label+.slide-text {
  /* move back from the -100% location */
  transform: translateX(0);
  /* make visible again */
  opacity: 1;
}

/* - - - Animation Five - - - */

/* Style the toggle label as a button */
.spin-label {
  cursor: pointer;
  display: inline-block;
  padding: 1rem;
  margin: 1.5rem;
  background-color: #e9f4df;
  color: #517cf2;
  border-radius: 6px;
  border: 1px solid #ccc;
  user-select: none;
  font-weight: 600;
  box-shadow: 0 0 8px #99d490;
}

/* Keyframes for spinning animations 
start 0 deg, move to 360 deg */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

/* base state with no spin */
.spin-text {
  display: inline-block;
  transition: transform 0.3s ease;
  background-color: #f5ecf9;
  color: #8c56dc;
  border-radius: 25%;
  border: 1px solid #ccc;
  padding: 2rem;
}

/* when spin-toggle is check, apply the spin animation indefinitely */
#spin-toggle:checked+.spin-label+.spin-text {
  /* linear means the animation runs at a constant speed from start to finish */
  animation: spin 3s linear infinite;
}

/* - - - Animation Six - - - */

/*styling for click to expand menu button */
#animations-box-one {
  margin: 3rem;
  color: rgb(13, 8, 8);
  background: #b0c3de;
  padding: 1rem;
  border: 1px solid #90b4d4;
  box-shadow: 0 0 8px #90b4d4;
  border-radius: 8px;
  margin: 0 2rem;
  text-align: center;
}

/* Hamburger button styles */
.hamburger {
  display: inline-block;
  width: 50px;
  height: 22px;
  position: relative;
  user-select: none;
}

/* styling for the empty spans to make them look like lines */
.hamburger span {
  display: block;
  height: 4px;
  background: #333;
  margin: 4px 0;
  border-radius: 2px;
  transition: 0.3s ease;
}

/* dropdown menu (hidden by default) */
.dropdown-menu {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.4s ease;
  background-color: #f0f0f0;
  border: 0 solid #ddd;
  border-radius: 6px;
  margin-top: 10px;
  width: 150px;
}

/* style for the menu list */
.dropdown-menu ul {
  list-style: none;
  padding: 10px;
  margin: 0;
}

/* styles for all li in the list */
.dropdown-menu li {
  margin-bottom: 8px;
}

/* no margin for the last li*/
.dropdown-menu li:last-child {
  margin-bottom: 0;
}

/* colours, text decoration, font weight */
.dropdown-menu a {
  text-decoration: none;
  color: #333;
  font-weight: 600;
}

/* Show menu when checkbox is checked */
#menu-toggle:checked+.hamburger+.dropdown-menu {
  /* give elment some height */
  max-height: 300px;
  border-width: 1px;
}

/* Optional: animate hamburger to X when open */
#menu-toggle:checked+.hamburger span:nth-child(1) {
  /* rotatation value for 1st span */
  /* move by certain amount of pixels, and rotate certain amount of degrees */
  transform: translateY(8px) rotate(45deg);
}

#menu-toggle:checked+.hamburger span:nth-child(2) {
  /* opacity value for second span 
  make it invisible */
  opacity: 0;
}

#menu-toggle:checked+.hamburger span:nth-child(3) {
  /* rotatation value for 3rd span */
  /* move by certain amount of pixels, and rotate certain amount of degrees */
  transform: translateY(-8px) rotate(-45deg);
}